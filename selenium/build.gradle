plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

def allureVersion = '2.25.0'
def aspectJVersion = '1.9.21'

repositories {
    mavenCentral()
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}


dependencies {
    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.16.1'
    implementation group: 'org.jcommander', name: 'jcommander', version: '1.83'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation 'com.mysql:mysql-connector-j:8.1.0'
    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
    implementation 'org.hibernate.orm:hibernate-core:6.4.1.Final'

}

test {
    useJUnitPlatform()
    if (project.hasProperty('browser')) {
        systemProperty('browser', project.property('browser'))
    }
    useJUnitPlatform()
    if (project.hasProperty('target')) {
        systemProperty('target', project.property('target'))
    }
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}